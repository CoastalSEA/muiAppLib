function [A,B] = coeff_AB(WS,BW,BD)
%
%-------function help------------------------------------------------------
% NAME
%   coeff_AB .m
% PURPOSE
%   Function called by overtopping functions otop_Q and otop_C
% USAGE
%   [A,B] = coeff_AB(WS,BW,BD)
% INPUTS
%   WS - wall slope (1:m)
%   BW - berm width
%   BD - depth of berm below water surface
% OUTPUT
%   A, B - overtopping model coefficients
% NOTES
%   Calculate the coeeficients A and B. If a simple slope use the fitted
%   polnomial proposed by IHT. If a berm is present use the look up tables
%   from the Owen M W, 1980, Design of seawalls allowing for wave 
%   overtopping, Report No: EX 924, HR Wallingford
% SEE ALSO
%   otop_Q.m
%
% Author: Ian Townend
% CoastalSEA (c)June 2016
%--------------------------------------------------------------------------
%
    if BW>0           % Berm present
        [A,B] = AB_interp(WS,BW,BD);
    else              % No berm
        if WS>5
            A = 2.5e-2;
            B = 65.2;
        else
            A = -0.0005+0.0105*WS-0.0025*WS^2+0.0003*WS^3;
            B = 28.1478-13.7719*WS+6.1485*WS^2-0.3828*WS^3;
        end
    end
    %
    %--------------------------------------------------------------------------
    %    
    function [A,B] = AB_interp(ws,bw,bd)

    % interpolate the matrix for the berm case

    % Set up matrices of coefficients for berm case
    WS = [1,2,3,4,5];          %wall slope (1:LWS)
    BW = [0,5,10,20,40,80]';    %berm width (m)
    BD = [0,1,2,4];             %berm depth below SWL (m)

    Am(:,:,1) = [0.79 1.65 1 0.79 0.15 0.0035; ...
                  1.25 1.75 3 0.3 0.215 0.0042; ...
                  1.63 2.6 3.25 0.24 0.105 0.0047; ...
                  1.92 5.2 3.1 0.23 0.013 0.0052; ...
                  2.2 10 3 0.23 0.001 0.0056];
    Am(:,:,2) = [0.79 1.55 0.92 0.75 0.12 0.0041; ...
                  1.25 1.9 3.39 0.34 0.24 0.0066; ...
                  1.63 3 3.6 0.33 0.11 0.0064; ...
                  1.92 5 3.03 0.39 0.015 0.0054; ...
                  2.2 9.5 2.3 0.6 0.002 0.0033];
    Am(:,:,3) = [0.79 0.34 0.48 0.09 0.04 0.02; ...
                  1.25 0.98 0.68 0.2 0.05 0.04; ...
                  1.63 1.4 0.83 0.43 0.13 0.06; ...
                  1.92 1.59 0.86 0.85 0.47 0.09; ...
                  2.2 1.6 0.89 2 2.5 0.13];
    Am(:,:,4) = [0.79 0.6 0.64 0.09 0.04 0.02; ...
                  1.25 1.1 0.91 0.2 0.05 0.04; ...
                  1.63 1.4 1.2 0.43 0.13 0.06; ...
                  1.92 1.8 1.45 0.85 0.47 0.09; ...
                  2.2 2 1.7 2 2.5 0.13];
    Am = Am*0.01;

    Bm(:,:,1) = [20.12 37 41.9 49 52 53; ...
                  22.06 41 56.7 52 58 68; ...
                  31.9 53 70.0 56 62.5 72; ...
                  47 70 79.6 62 64 72; ...
                  65.2 88 86 68 64 72];             
    Bm(:,:,2) = [20.12 32.7 38.9 45.6 49.3 51.4; ...
                  22.06 37.3 53.3 50 56.2 66.5; ...
                  31.9 51 66 55 61 71; ... 
                  47 70.3 79.6 61.6 63.4 71.6; ...
                  65.2 91 92 69 63 71];
    Bm(:,:,3) = [20.12 16.5 18.9 14.8 22.7 25.9; ...
                  22.06 24 24.2 24.8 25.9 25.8; ...
                  31.9 34 33 37 37 38; ...
                  47 46.6 45.8 50.4 51.2 58.2; ...
                  65.2 59 58 66 68 81];  
    Bm(:,:,4) = [20.12 20 19.5 14.8 22.7 25.9; ...
                  22.06 21.8 21.5 24.8 25.9 25.8; ...
                  31.9 29 27 37 37 38; ...
                  47 44 41.1 50.4 51.2 58.2; ...
                  65.2 62 60 66 68 81];  

    %interpolate for user specified values
    %
    if ws>5 || bw>80 || bd>4
        warndlg('Berm depth out of range');
        A = NaN; B = NaN;
        return
    else
        lnA = interp3(BW,WS,BD,log(Am),bw,ws,bd);
        A = exp(lnA);
        B = interp3(BW,WS,BD,Bm,bw,ws,bd);
    end