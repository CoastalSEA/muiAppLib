function sediment_properties()
%
%-------function help------------------------------------------------------
% NAME
% sediment_properties.m
% PURPOSE
%   Calculate a set of sediment properties based on bulk density
% USAGE
%   sediment_properties()
% INPUTS
%   UI input and menu selection
% OUTPUTS
%   figure with sediment property table based on selection
% SEE ALSO
%   calls sedprops which uses fluidprops.
%
% Author: Ian Townend
% CoastalSEA (c) Nov 2023
%--------------------------------------------------------------------------
%
    header = sprintf('Input fields that are empty are optional\nDefaults are T=10, S=32, rhow=1025 \n\nBulk or wet density (kg/m3)');
    inptxt = {header,...
              'Sediment density (kg/m3)',...
              'Water density (kg/m3)',...
              'Temperature (degC)',...
              'Salinity (ppt)',...
              'Saturation (1=saturated, 0=dry)'};
    defaults = {'2000','2650','','','',''};
    input = inputdlg(inptxt,'SedProps',1,defaults);
    if isempty(input), return; end %user cancelled
    rhob = str2double(input{1});
    rhos = str2double(input{2});
    rhow = str2num(input{3});   %#ok<*ST2NM> keeps empty fields, whereas
    temp = str2num(input{4});   %str2double returns NaN
    salin = str2num(input{5});
    satu  = str2num(input{6});

    %variables available
    vardef = {'SpecificDensity';'DryDensity';'MassSedConc';'VolSedConc';...
              'FluidSedMixDensity';'Porosity';'VoidRatio';'SolidContent';...
              'WaterContent';'UnitWeightSed';'UnitSubWeightSed';...
              'DynamicViscosity';'WaterSedDynVisc';'WaterSedKinVisc'};

    vardesc = {'Specific density (-)';...
           'Dry density (kg/m3)';...
           'Mass sediment concentration (kg/m3)';...
           'Volume sediment concentration (-)';...
           'Fluid sediment mixture density (kg/m3)';...
           'Porosity (-)';...
           'Void ratio (-)';...
           'Solid content (-)';...
           'Water content (-)';...
           'Unit weight sediment (N/m3)';
           'Unit submerged weight sediment (N/m3)';...
           'Dynamic viscosity (Ns/m2)';...
           'Water-sediment dynamic viscosity (m2/s)';...
           'Water-sediment kinematic viscosity (m2/s)'};

        inplst = {'Bulk or wet density (kg/m3)',...
                  'Sediment density (kg/m3)',...
                  'Water density (kg/m3)',...
                  'Temperature (degC)',...
                  'Salinity (ppt)',...
                  'Saturation (1=saturated, 0=dry)'};
        desctxt = sprintf('Results for %s = %s, %s = %s, %s = %s, %s = %s, %s = %s, %s = %s',...
                   inplst{1},input{1},inplst{2},input{2},inplst{3},input{3},...
                   inplst{4},input{4},inplst{5},input{5},inplst{6},input{6});

    %user selects to return all or a single property
    answer = questdlg('All properties or select','SedProps','All','Select','All');    
    if strcmp(answer,'All')
        s = zeros(size(vardef,2),1);
        for i=1:length(vardef)
            s(i,1) = sedprops(rhob,rhos,rhow,vardef{i},salin,temp,satu);
        end
        result = table(vardesc,s,'VariableNames',{'Variable','Value'});        
        tablefigure('Sediment Properties',desctxt,result);
    else
        prmptxt = 'Select variable:';
        select = listdlg('ListString',vardesc,'PromptString',prmptxt,...
                         'Name','SedProps','SelectionMode','single',...
                         'ListSize',[250,200]);
        if isempty(select), return; end %user cancelled
        vardefi = vardef{select};
        s = sedprops(rhob,rhos,rhow,vardefi,salin,temp,satu);
        restxt = sprintf('%s\n\n%s = %g',desctxt,vardesc{select},s);
        msgbox(restxt,'SedProps');
    end
end